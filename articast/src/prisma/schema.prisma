// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BlogFeed {
  url                 String               @id
  title               String
  articleSources      ArticleSource[]
  episodeAudioOrigins EpisodeAudioOrigin[]

  @@map("blog_feeds")
}

model Article {
  url                 String               @id
  title               String
  publishedAt         DateTime             @map("published_at")
  status              String
  articleSource       ArticleSource?
  articleCrawling     ArticleCrawling?
  episodeAudioArticle EpisodeAudioArticle?

  @@map("articles")
}

model ArticleSource {
  blogFeed    BlogFeed @relation(fields: [blogFeedUrl], references: [url])
  blogFeedUrl String   @map("blog_feed_url")
  article     Article  @relation(fields: [articleUrl], references: [url])
  articleUrl  String   @unique @map("article_url")

  @@id([blogFeedUrl, articleUrl])
  @@map("article_sources")
}

model ArticleCrawling {
  article            Article  @relation(fields: [articleUrl], references: [url])
  articleUrl         String   @id @map("article_url")
  crawledContentPath String   @map("crawled_content_path")
  crawledAt          DateTime @map("crawled_at")

  @@map("article_crawlings")
}

model EpisodeAudio {
  id                   String                @id
  audioFilePath        String                @map("audio_file_path")
  generatedAt          DateTime              @map("generated_at")
  status               String
  episodeAudioOrigin   EpisodeAudioOrigin?
  episodeAudioArticles EpisodeAudioArticle[]

  @@map("episode_audios")
}

model EpisodeAudioOrigin {
  episodeAudio   EpisodeAudio @relation(fields: [episodeAudioId], references: [id])
  episodeAudioId String       @unique @map("episode_audio_id")
  blogFeed       BlogFeed     @relation(fields: [blogFeedUrl], references: [url])
  blogFeedUrl    String       @map("blog_feed_url")

  @@map("episode_audio_origins")
}

model EpisodeAudioArticle {
  episodeAudio   EpisodeAudio @relation(fields: [episodeAudioId], references: [id])
  episodeAudioId String       @map("episode_audio_id")
  article        Article      @relation(fields: [articleUrl], references: [url])
  articleUrl     String       @unique @map("article_url")

  @@map("episode_audio_articles")
}
